version: '3.8'

services:
  # Main API service
  api:
    image: keamouyleng/genx_docker:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PYTHON_VERSION=3.11
      - PORT=8000
    env_file:
      - .env.production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and job queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: genx_fx
      POSTGRES_USER: genx_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-genx_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Celery worker for background tasks
  celery_worker:
    image: keamouyleng/genx_docker:latest
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A api.celery worker --loglevel=info
    environment:
      - C_FORCE_ROOT=true
    env_file:
      - .env.production
    depends_on:
      - redis
      - postgres
    restart: unless-stopped

  # Celery beat for scheduled tasks
  celery_beat:
    image: keamouyleng/genx_docker:latest
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A api.celery beat --loglevel=info
    environment:
      - C_FORCE_ROOT=true
    env_file:
      - .env.production
    depends_on:
      - redis
      - postgres
    restart: unless-stopped

  # Flower for monitoring Celery
  flower:
    image: keamouyleng/genx_docker:latest
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A api.celery flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - .env.production
    depends_on:
      - redis
      - celery_worker
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
